buildscript {
    ext.projectVersion = '0.2.0'
    ext.projectName = 'konform'
    ext.projectGroup = 'io.konform'
    ext.projectDesc = 'Konform: Portable validations for Kotlin'
    ext.projectHost = 'github'
    ext.projectOrg = 'konform-kt'
    ext.projectLicense = 'MIT'
    ext.projectLicenseUrl = 'http://opensource.org/licenses/MIT'
    ext.projectDevelNick = 'nlochschmidt'
    ext.projectDevelName = 'Niklas Lochschmidt'
    ext.projectInceptionYear = 2018

    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.3.70'
}

repositories {
    mavenCentral()
}

group projectGroup
version projectVersion

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

kotlin {
    jvm()
    js {
        browser {
        }
        nodejs {
        }
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')
            }
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
    }
}

task emptyJar(type: Jar) {
}

afterEvaluate {
    publishing {
        publications {
            all {
                if (name == 'kotlinMultiplatform') {
                    artifact(emptyJar)
                    artifact(emptyJar) {
                        classifier 'sources'
                    }
                    artifact(emptyJar) {
                        classifier 'javadoc'
                    }
                } else {
                    artifact(emptyJar) {
                        classifier 'javadoc'
                    }
                }
                pom {
                    name = projectName
                    description = projectDesc
                    url = 'https://github.com/konform-kt/konform'
                    licenses {
                        license {
                            name = projectLicense
                            url = projectLicenseUrl
                            distribution = 'repo'
                        }
                    }
                    developers {
                        developer {
                            id = projectDevelNick
                            name = projectDevelName
                        }
                    }

                    scm {
                        url = "https://github.com/konform-kt/konform.git"
                    }
                }
            }
        }
    }
}

def publishUser = (rootProject.findProperty("BINTRAY_USER") ?: project.findProperty("bintrayUser") ?: System.getenv("BINTRAY_USER"))?.toString()
def publishPassword = (rootProject.findProperty("BINTRAY_KEY") ?: project.findProperty("bintrayApiKey") ?: System.getenv("BINTRAY_API_KEY") ?: System.getenv("BINTRAY_KEY"))?.toString()

if (publishUser == null || publishPassword == null) {
    println("Required BINTRAY_USER and BINTRAY_KEY in ~/.gradle/gradle.properties")
}

bintray {
    user = publishUser
    key = publishPassword
    publications = ['js', 'jvm', 'metadata', 'kotlinMultiplatform']
    publish = false
    pkg {
        repo = projectName
        name = projectName
        userOrg = projectOrg
        licenses = [projectLicense]
        desc = projectDesc
        labels = ['kotlin', 'validation']
        vcsUrl = 'https://github.com/konform-kt/konform.git'
        websiteUrl = 'https://github.com/konform-kt/konform'
        issueTrackerUrl = 'https://github.com/konform-kt/konform/issues'

        githubRepo = 'konform-kt/konform'
        version {
            name = projectVersion
        }
    }
}
